<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Api-workshop-3s on Managed IoT Cloud Workshops</title>
    <link>https://pwntus.github.io/mic-workshops/api-workshop-3/</link>
    <description>Recent content in Api-workshop-3s on Managed IoT Cloud Workshops</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://pwntus.github.io/mic-workshops/api-workshop-3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Workshop 3: MQTT Realtime</title>
      <link>https://pwntus.github.io/mic-workshops/api-workshop-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pwntus.github.io/mic-workshops/api-workshop-3/</guid>
      <description>During the first workshop we saw how we could create a HTTP client with necessary headers to make API calls. The second workshop made us experiment with the API and calling different API endpoints. During the third workshop we will create a MQTT client, allowing us to subscribe to data generated by Things.
Open a clean directory and clone the working repository (if not already done):
git clone https://github.com/Pwntus/mic-workshops.git  Next, navigate to mic-workshops/workshops/03 and run npm i:</description>
    </item>
    
    <item>
      <title>Configure MQTT Client</title>
      <link>https://pwntus.github.io/mic-workshops/api-workshop-3/configure-mqtt-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pwntus.github.io/mic-workshops/api-workshop-3/configure-mqtt-client/</guid>
      <description>You should now have a clone of a stub project where we will continue to write code for our MQTT client.
Open index.js. You should see the following content:
// mic-workshops/workshops/03/index.js const AWSMqtt = require(&#39;aws-mqtt-client&#39;).default const API = require(&#39;./api.class.js&#39;) const myApi = new API() // Insert variables const IOT_ENDPOINT = &#39;&#39; const AWS_REGION = &#39;&#39; const USERNAME = &#39;&#39; const PASSWORD = &#39;&#39; const main = async () =&amp;gt; { try { await myApi.</description>
    </item>
    
    <item>
      <title>Create MQTT Client</title>
      <link>https://pwntus.github.io/mic-workshops/api-workshop-3/create-mqtt-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pwntus.github.io/mic-workshops/api-workshop-3/create-mqtt-client/</guid>
      <description>We now have all the necessary info to actually create the MQTT client. We&amp;rsquo;ll use a package called aws-mqtt-client which works both in the browser and in Node.js. You can find the full documentation for the aws-mqtt-client package here.
Continue by adding code to index.js, after we&amp;rsquo;ve logged in:
// Instantiate a new MQTT client with configurations let MQTTClient = new AWSMqtt({ region: AWS_REGION, endpointAddress: IOT_ENDPOINT, maximumReconnectTimeMs: 8000, protocol: &#39;wss&#39; })  You can see here that we&amp;rsquo;re using AWS_REGION and IOT_ENDPOINT during the MQTT client initialization.</description>
    </item>
    
    <item>
      <title>Add Event Listeners</title>
      <link>https://pwntus.github.io/mic-workshops/api-workshop-3/add-event-listeners/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pwntus.github.io/mic-workshops/api-workshop-3/add-event-listeners/</guid>
      <description>After we&amp;rsquo;ve instantiated a new MQTT client we need to add event listeners. Event listeners are &amp;ldquo;hooks&amp;rdquo; that trigger functions when different MQTT events occur.
Continue by adding code to index.js:
// If an error occurs MQTTClient.on(&#39;error&#39;, e =&amp;gt; { console.error(&#39;MQTT error:&#39;, e) }) // If a reconnect happens MQTTClient.on(&#39;reconnect&#39;, () =&amp;gt; { console.error(&#39;MQTT reconnect, check topic&#39;) }) // Incoming message MQTTClient.on(&#39;message&#39;, (topic, message) =&amp;gt; { console.log(&#39;MQTT message: &#39;, JSON.parse(message.toString(&#39;utf-8&#39;))) })  We&amp;rsquo;ve added three event listeners, but before we can watch incoming messages we need to subscribe to a topic.</description>
    </item>
    
    <item>
      <title>Final Code</title>
      <link>https://pwntus.github.io/mic-workshops/api-workshop-3/final-code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pwntus.github.io/mic-workshops/api-workshop-3/final-code/</guid>
      <description>// mic-workshops/workshops/03/index.js const AWSMqtt = require(&#39;aws-mqtt-client&#39;).default const API = require(&#39;./api.class.js&#39;) const myApi = new API(&#39;&amp;lt; API key &amp;gt;&#39;) // Insert variables const IOT_ENDPOINT = &#39;xxxxxxxxxxxxxx.iot.xx-xxxx-x.amazonaws.com&#39; const AWS_REGION = &#39;xx-xxxx-x&#39; const USERNAME = &#39;&amp;lt; your MIC username &amp;gt;&#39; const PASSWORD = &#39;&amp;lt; your MIC password &amp;gt;&#39; const main = async () =&amp;gt; { try { await myApi.init() // Init API (fetch Manifest) await myApi.login({ username: USERNAME, password: PASSWORD }) // Create a Cognito Identity before authorizing MQTT client const cognitoIdentity = await myApi.</description>
    </item>
    
  </channel>
</rss>